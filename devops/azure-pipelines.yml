trigger:
  branches:
    include:
      - master

variables:
  - template: variables/build.yml
  - template: variables/dev.yml
  - template: variables/service-connections.yml

stages:
  - stage: 'Build'
    displayName: 'Build the backend REST api'
    jobs:
      - job: 'Build'
        displayName: 'Build job'
        pool:
          vmImage: '$(buildVmImage)'

        steps:
          - task: UseDotNet@2
            displayName: 'Install .NET Core SDK'
            inputs:
              version: 6.x
              performMultiLevelLookup: true
              includePreviewVersions: true # Required for preview versions

          - task: DotNetCoreCLI@2
            displayName: Restore
            inputs:
              command: 'restore'
              projects: '**/*.csproj'
              includeNuGetOrg: true

          - task: DotNetCoreCLI@2
            displayName: 'Verify no formatting errors'
            continueOnError: true
            inputs:
              command: 'custom'
              custom: 'format'
              arguments: ' marketplace-dotnet-api.sln --verify-no-changes --verbosity detailed'

          - task: DotNetCoreCLI@2
            displayName: Build
            inputs:
              command: build
              projects: '**/*.csproj'
              arguments: '--no-restore --configuration $(buildConfiguration)'

          - task: DotNetCoreCLI@2
            displayName: Publish
            inputs:
              command: publish
              publishWebProjects: false
              arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
              zipAfterPublish: true

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact: drop'
            condition: succeeded()

  - stage: 'Deploy_Dev'
    displayName: 'Deploy to Dev'
    jobs:
      - deployment: 'Deploy'
        displayName: 'Deploy job'
        environment: DEV
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: drop

                - task: AzureWebApp@1
                  displayName: 'Deploy .net core api to azure app service'
                  inputs:
                    azureSubscription: '$(managedIdentityName)'
                    appName: '$(project)-$(environment)-$(webAppName)'
                    appType: 'webAppLinux'
                    package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip'
                    appSettings: |
                      -APPINSIGHTS_INSTRUMENTATIONKEY '$(keyVaultAppInsightsKeyUrl)' 
                      -APPLICATIONINSIGHTS_CONNECTION_STRING '$(keyVaultAppInsightsConnectionStringUrl)' 
                      -APPINSIGHTS_PROFILERFEATURE_VERSION 1.0.0 
                      -APPINSIGHTS_SNAPSHOTFEATURE_VERSION 1.0.0 
                      -ApplicationInsightsAgent_EXTENSION_VERSION ~3 
                      -DiagnosticServices_EXTENSION_VERSION ~3 
                      -InstrumentationEngine_EXTENSION_VERSION ~1 
                      -SnapshotDebugger_EXTENSION_VERSION ~1 
                      -XDT_MicrosoftApplicationInsights_BaseExtensions ~1 
                      -XDT_MicrosoftApplicationInsights_Mode recommended 
                      -XDT_MicrosoftApplicationInsights_PreemptSdk disabled 
